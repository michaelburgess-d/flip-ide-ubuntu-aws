"use strict";
// *****************************************************************************
// Copyright (C) 2020 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElectronWsOriginValidator = void 0;
const inversify_1 = require("inversify");
const backend_remote_service_1 = require("../../node/backend-remote-service");
let ElectronWsOriginValidator = class ElectronWsOriginValidator {
    allowWsUpgrade(request) {
        // If we are running as a remote server, requests will come from an http endpoint
        if (this.backendRemoteService.isRemoteServer()) {
            return true;
        }
        // On Electron the main page is served from the `file` protocol.
        // We don't expect the requests to come from anywhere else.
        return request.headers.origin === 'file://';
    }
};
__decorate([
    (0, inversify_1.inject)(backend_remote_service_1.BackendRemoteService),
    __metadata("design:type", backend_remote_service_1.BackendRemoteService)
], ElectronWsOriginValidator.prototype, "backendRemoteService", void 0);
ElectronWsOriginValidator = __decorate([
    (0, inversify_1.injectable)()
], ElectronWsOriginValidator);
exports.ElectronWsOriginValidator = ElectronWsOriginValidator;
//# sourceMappingURL=electron-ws-origin-validator.js.map